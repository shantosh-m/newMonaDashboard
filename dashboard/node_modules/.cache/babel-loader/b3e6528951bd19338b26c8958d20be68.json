{"ast":null,"code":"var _jsxFileName = \"E:\\\\new Dashboard\\\\dashboard\\\\src\\\\components\\\\machinelist\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport axios from \"axios\";\nimport { MachineGrid } from \"./utils/machinegrid\";\nimport TimeGrid from \"./utils/timegrid\";\nimport { Title } from \"./utils/title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MachineList = () => {\n  _s();\n\n  const [machines, setMachines] = useState([]);\n  useEffect(() => {\n    const fetchDataFromBackend = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3002/gettingMachineInfo\"); // Assuming the backend API response is an array of machine data\n\n        setMachines(response.data);\n      } catch (error) {\n        console.error(\"Error fetching machine data:\", error);\n      }\n    };\n\n    fetchDataFromBackend();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"Molding Section Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: machines.map((machine, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        sm: 4,\n        md: 2,\n        lg: 2,\n        m: {\n          sm: 2,\n          md: 4,\n          lg: 0\n        },\n        sx: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: index === 0 ? /*#__PURE__*/_jsxDEV(TimeGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `machines/:${machine.machineID}`\n          },\n          state: { ...machine\n          },\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MachineGrid, {\n            ID: machine.machineID,\n            monaNumber: machine.monaNumber,\n            moldProtector: machine.moldProtector,\n            status: machine.status,\n            moldMaker: machine.moldMaker,\n            moldMaterial: machine.moldMaterial,\n            moldShots: Math.round(machine.moldShots),\n            failedShots: Math.round(machine.failedShots)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MachineList, \"etL6ZTbqU58vGaTbtLSSX9BCKmI=\");\n\n_c = MachineList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachineList\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Link","axios","MachineGrid","TimeGrid","Title","MachineList","machines","setMachines","fetchDataFromBackend","response","get","data","error","console","display","alignItems","justifyContent","map","machine","index","sm","md","lg","pathname","machineID","textDecoration","monaNumber","moldProtector","status","moldMaker","moldMaterial","Math","round","moldShots","failedShots"],"sources":["E:/new Dashboard/dashboard/src/components/machinelist/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport axios from \"axios\";\nimport { MachineGrid } from \"./utils/machinegrid\";\nimport TimeGrid from \"./utils/timegrid\";\nimport { Title } from \"./utils/title\";\n\nexport const MachineList = () => {\n  const [machines, setMachines] = useState([]);\n\n  useEffect(() => {\n    const fetchDataFromBackend = async () => {\n      try {\n        const response = await axios.get(\n          \"http://localhost:3002/gettingMachineInfo\"\n        );\n        // Assuming the backend API response is an array of machine data\n        setMachines(response.data);\n      } catch (error) {\n        console.error(\"Error fetching machine data:\", error);\n      }\n    };\n\n    fetchDataFromBackend();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return (\n    <Container maxWidth={false}>\n      <Title title=\"Molding Section Statistics\" />\n\n      <Grid\n        container\n        spacing={4}\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {machines.map((machine, index) => (\n          <Grid\n            item\n            xs={11}\n            sm={4}\n            md={2}\n            lg={2}\n            m={{ sm: 2, md: 4, lg: 0 }}\n            key={index}\n            sx={{\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {index === 0 ? (\n              <TimeGrid />\n            ) : (\n              <Link\n                to={{ pathname: `machines/:${machine.machineID}` }}\n                state={{ ...machine }}\n                style={{ textDecoration: \"none\" }}\n              >\n                <MachineGrid\n                  ID={machine.machineID}\n                  monaNumber={machine.monaNumber}\n                  moldProtector={machine.moldProtector}\n                  status={machine.status}\n                  moldMaker={machine.moldMaker}\n                  moldMaterial={machine.moldMaterial}\n                  moldShots={Math.round(machine.moldShots)}\n                  failedShots={Math.round(machine.failedShots)}\n                />\n              </Link>\n            )}\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMW,oBAAoB,GAAG,YAAY;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACrB,0CADqB,CAAvB,CADE,CAIF;;QACAH,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;MACD,CAND,CAME,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;MACD;IACF,CAVD;;IAYAJ,oBAAoB;EACrB,CAdQ,EAcN,EAdM,CAAT,CAH+B,CAiBvB;;EAER,oBACE,QAAC,SAAD;IAAW,QAAQ,EAAE,KAArB;IAAA,wBACE,QAAC,KAAD;MAAO,KAAK,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,IAAD;MACE,SAAS,MADX;MAEE,OAAO,EAAE,CAFX;MAGE,EAAE,EAAE;QACFM,OAAO,EAAE,MADP;QAEFC,UAAU,EAAE,QAFV;QAGFC,cAAc,EAAE;MAHd,CAHN;MAAA,UASGV,QAAQ,CAACW,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACZ,QAAC,IAAD;QACE,IAAI,MADN;QAEE,EAAE,EAAE,EAFN;QAGE,EAAE,EAAE,CAHN;QAIE,EAAE,EAAE,CAJN;QAKE,EAAE,EAAE,CALN;QAME,CAAC,EAAE;UAAEC,EAAE,EAAE,CAAN;UAASC,EAAE,EAAE,CAAb;UAAgBC,EAAE,EAAE;QAApB,CANL;QAQE,EAAE,EAAE;UACFP,UAAU,EAAE,QADV;UAEFC,cAAc,EAAE;QAFd,CARN;QAAA,UAaGG,KAAK,KAAK,CAAV,gBACC,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QADD,gBAGC,QAAC,IAAD;UACE,EAAE,EAAE;YAAEI,QAAQ,EAAG,aAAYL,OAAO,CAACM,SAAU;UAA3C,CADN;UAEE,KAAK,EAAE,EAAE,GAAGN;UAAL,CAFT;UAGE,KAAK,EAAE;YAAEO,cAAc,EAAE;UAAlB,CAHT;UAAA,uBAKE,QAAC,WAAD;YACE,EAAE,EAAEP,OAAO,CAACM,SADd;YAEE,UAAU,EAAEN,OAAO,CAACQ,UAFtB;YAGE,aAAa,EAAER,OAAO,CAACS,aAHzB;YAIE,MAAM,EAAET,OAAO,CAACU,MAJlB;YAKE,SAAS,EAAEV,OAAO,CAACW,SALrB;YAME,YAAY,EAAEX,OAAO,CAACY,YANxB;YAOE,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWd,OAAO,CAACe,SAAnB,CAPb;YAQE,WAAW,EAAEF,IAAI,CAACC,KAAL,CAAWd,OAAO,CAACgB,WAAnB;UARf;YAAA;YAAA;YAAA;UAAA;QALF;UAAA;UAAA;UAAA;QAAA;MAhBJ,GAOOf,KAPP;QAAA;QAAA;QAAA;MAAA,QADD;IATH;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoDD,CAvEM;;GAAMd,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}