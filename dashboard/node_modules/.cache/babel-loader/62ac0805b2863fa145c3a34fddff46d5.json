{"ast":null,"code":"// imported from https://github.com/unshiftio/yeast\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.yeast = exports.decode = exports.encode = void 0;\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n      length = 64,\n      map = {};\nlet seed = 0,\n    i = 0,\n    prev;\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\n\nfunction encode(num) {\n  let encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\nexports.encode = encode;\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\n\nfunction decode(str) {\n  let decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\nexports.decode = decode;\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\n\nfunction yeast() {\n  const now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n}\n\nexports.yeast = yeast; //\n// Map each character to its index.\n//\n\nfor (; i < length; i++) map[alphabet[i]] = i;","map":{"version":3,"names":["Object","defineProperty","exports","value","yeast","decode","encode","alphabet","split","length","map","seed","i","prev","num","encoded","Math","floor","str","decoded","charAt","now","Date"],"sources":["C:/Users/user/Documents/MyDocu/Monadashboard-final/newMonaDashboard/dashboard/node_modules/engine.io-client/build/cjs/contrib/yeast.js"],"sourcesContent":["// imported from https://github.com/unshiftio/yeast\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.yeast = exports.decode = exports.encode = void 0;\r\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\r\nlet seed = 0, i = 0, prev;\r\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\r\nfunction encode(num) {\r\n    let encoded = '';\r\n    do {\r\n        encoded = alphabet[num % length] + encoded;\r\n        num = Math.floor(num / length);\r\n    } while (num > 0);\r\n    return encoded;\r\n}\r\nexports.encode = encode;\r\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\r\nfunction decode(str) {\r\n    let decoded = 0;\r\n    for (i = 0; i < str.length; i++) {\r\n        decoded = decoded * length + map[str.charAt(i)];\r\n    }\r\n    return decoded;\r\n}\r\nexports.decode = decode;\r\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\r\nfunction yeast() {\r\n    const now = encode(+new Date());\r\n    if (now !== prev)\r\n        return seed = 0, prev = now;\r\n    return now + '.' + encode(seed++);\r\n}\r\nexports.yeast = yeast;\r\n//\r\n// Map each character to its index.\r\n//\r\nfor (; i < length; i++)\r\n    map[alphabet[i]] = i;\r\n"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACI,MAAR,GAAiB,KAAK,CAAvD;AACA,MAAMC,QAAQ,GAAG,mEAAmEC,KAAnE,CAAyE,EAAzE,CAAjB;AAAA,MAA+FC,MAAM,GAAG,EAAxG;AAAA,MAA4GC,GAAG,GAAG,EAAlH;AACA,IAAIC,IAAI,GAAG,CAAX;AAAA,IAAcC,CAAC,GAAG,CAAlB;AAAA,IAAqBC,IAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASP,MAAT,CAAgBQ,GAAhB,EAAqB;EACjB,IAAIC,OAAO,GAAG,EAAd;;EACA,GAAG;IACCA,OAAO,GAAGR,QAAQ,CAACO,GAAG,GAAGL,MAAP,CAAR,GAAyBM,OAAnC;IACAD,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAGL,MAAjB,CAAN;EACH,CAHD,QAGSK,GAAG,GAAG,CAHf;;EAIA,OAAOC,OAAP;AACH;;AACDb,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,MAAT,CAAgBa,GAAhB,EAAqB;EACjB,IAAIC,OAAO,GAAG,CAAd;;EACA,KAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGM,GAAG,CAACT,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;IAC7BO,OAAO,GAAGA,OAAO,GAAGV,MAAV,GAAmBC,GAAG,CAACQ,GAAG,CAACE,MAAJ,CAAWR,CAAX,CAAD,CAAhC;EACH;;EACD,OAAOO,OAAP;AACH;;AACDjB,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,KAAT,GAAiB;EACb,MAAMiB,GAAG,GAAGf,MAAM,CAAC,CAAC,IAAIgB,IAAJ,EAAF,CAAlB;EACA,IAAID,GAAG,KAAKR,IAAZ,EACI,OAAOF,IAAI,GAAG,CAAP,EAAUE,IAAI,GAAGQ,GAAxB;EACJ,OAAOA,GAAG,GAAG,GAAN,GAAYf,MAAM,CAACK,IAAI,EAAL,CAAzB;AACH;;AACDT,OAAO,CAACE,KAAR,GAAgBA,KAAhB,C,CACA;AACA;AACA;;AACA,OAAOQ,CAAC,GAAGH,MAAX,EAAmBG,CAAC,EAApB,EACIF,GAAG,CAACH,QAAQ,CAACK,CAAD,CAAT,CAAH,GAAmBA,CAAnB"},"metadata":{},"sourceType":"script"}