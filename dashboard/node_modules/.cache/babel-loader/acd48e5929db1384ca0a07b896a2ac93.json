{"ast":null,"code":"var _jsxFileName = \"/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/machinelist/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Container, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { MachineGrid } from \"./templates/MachineGrid\";\nimport moment from \"moment\";\nimport { Title } from \"../title.js\";\nimport { useMachineContext } from \"../../contexts/machinecontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MachineList = () => {\n  _s();\n\n  const {\n    machineData\n  } = useMachineContext();\n\n  if (machineData) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            alignItems: \"center\",\n            justifyContents: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              title: \"Molding Section Statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), machineData.map((machine, index) => {\n              // if (machine.prodRate!= 0)\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true // xs={12}\n                ,\n                sm: 2,\n                md: 2,\n                lg: 2,\n                xl: 1,\n                sx: {\n                  alignItems: \"center\",\n                  justifyContents: \"center\",\n                  maxWidth: 100,\n                  marginBottom: 2,\n                  margin: 0,\n                  padding: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `machines/:${machine.machineID}`\n                  },\n                  state: { ...machine\n                  },\n                  style: {\n                    textDecoration: \"none\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(MachineGrid, {\n                    machineID: machine.machineID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"connection not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(MachineList, \"HZ8pcZ/efcaBBcbexPnL9EQOim0=\", false, function () {\n  return [useMachineContext];\n});\n\n_c = MachineList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachineList\");","map":{"version":3,"names":["React","Box","Container","Grid","Link","MachineGrid","moment","Title","useMachineContext","MachineList","machineData","alignItems","justifyContents","map","machine","index","maxWidth","marginBottom","margin","padding","pathname","machineID","textDecoration"],"sources":["/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/machinelist/index.js"],"sourcesContent":["import React from \"react\";\nimport { Box, Container, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { MachineGrid } from \"./templates/MachineGrid\";\nimport moment from \"moment\";\nimport { Title } from \"../title.js\";\nimport { useMachineContext } from \"../../contexts/machinecontext\";\n\nexport const MachineList = () => {\n  const { machineData } = useMachineContext();\n  if (machineData) {\n    return (\n      <Box component=\"main\">\n        <Container maxWidth={false}>\n          <Grid\n            container\n            spacing={3}\n            sx={{ alignItems: \"center\", justifyContents: \"center\" }}\n          >\n            <React.Fragment>\n              <Title title=\"Molding Section Statistics\" />\n\n              {machineData.map((machine, index) => {\n                // if (machine.prodRate!= 0)\n                return (\n                  <Grid\n                    item\n                    // xs={12}\n                    sm={2}\n                    md={2}\n                    lg={2}\n                    xl={1}\n                    key={index}\n                    sx={{\n                      alignItems: \"center\",\n                      justifyContents: \"center\",\n                      maxWidth: 100,\n                      marginBottom: 2,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    <Link\n                      to={{ pathname: `machines/:${machine.machineID}` }}\n                      state={{ ...machine }}\n                      style={{ textDecoration: \"none\" }}\n                    >\n                      {/* <MachineGrid\n                        machineId={machine.machineID}\n                        monaNumber={machine.monaNumber}\n                        moldId={machine.moldID}\n                        status={machine.status}\n                        moldShots={machine.moldShots}\n                        failedShots={machine.failedShots}\n                        prodRate={machine.prodRate}\n                        material={machine.material}\n                        moldMaker={machine.moldMaker}\n                        prod_startDate={moment(machine.prod_start_date).format(\n                          \"DD-MM-YYYY\"\n                        )}\n                        prod_startTime={moment(machine.prod_start_date).format(\n                          \"kk:mm:ss\"\n                        )}\n                        prod_endDate={moment(machine.prod_end_date).format(\n                          \"DD-MM-YYYY\"\n                        )}\n                        prod_endTime={moment(machine.prod_end_date).format(\n                          \"kk:mm:ss\"\n                        )} */}\n                      <MachineGrid machineID={machine.machineID}/>\n                    </Link>\n                  </Grid>\n                );\n              })}\n            </React.Fragment>\n          </Grid>\n        </Container>\n      </Box>\n    );\n  } else {\n    return <div>connection not found</div>;\n  }\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,eAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAC/B,MAAM;IAAEC;EAAF,IAAkBF,iBAAiB,EAAzC;;EACA,IAAIE,WAAJ,EAAiB;IACf,oBACE,QAAC,GAAD;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE,QAAC,SAAD;QAAW,QAAQ,EAAE,KAArB;QAAA,uBACE,QAAC,IAAD;UACE,SAAS,MADX;UAEE,OAAO,EAAE,CAFX;UAGE,EAAE,EAAE;YAAEC,UAAU,EAAE,QAAd;YAAwBC,eAAe,EAAE;UAAzC,CAHN;UAAA,uBAKE,QAAC,KAAD,CAAO,QAAP;YAAA,wBACE,QAAC,KAAD;cAAO,KAAK,EAAC;YAAb;cAAA;cAAA;cAAA;YAAA,QADF,EAGGF,WAAW,CAACG,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,KAAoB;cACnC;cACA,oBACE,QAAC,IAAD;gBACE,IAAI,MADN,CAEE;gBAFF;gBAGE,EAAE,EAAE,CAHN;gBAIE,EAAE,EAAE,CAJN;gBAKE,EAAE,EAAE,CALN;gBAME,EAAE,EAAE,CANN;gBAQE,EAAE,EAAE;kBACFJ,UAAU,EAAE,QADV;kBAEFC,eAAe,EAAE,QAFf;kBAGFI,QAAQ,EAAE,GAHR;kBAIFC,YAAY,EAAE,CAJZ;kBAKFC,MAAM,EAAE,CALN;kBAMFC,OAAO,EAAE;gBANP,CARN;gBAAA,uBAiBE,QAAC,IAAD;kBACE,EAAE,EAAE;oBAAEC,QAAQ,EAAG,aAAYN,OAAO,CAACO,SAAU;kBAA3C,CADN;kBAEE,KAAK,EAAE,EAAE,GAAGP;kBAAL,CAFT;kBAGE,KAAK,EAAE;oBAAEQ,cAAc,EAAE;kBAAlB,CAHT;kBAAA,uBA2BE,QAAC,WAAD;oBAAa,SAAS,EAAER,OAAO,CAACO;kBAAhC;oBAAA;oBAAA;oBAAA;kBAAA;gBA3BF;kBAAA;kBAAA;kBAAA;gBAAA;cAjBF,GAOON,KAPP;gBAAA;gBAAA;gBAAA;cAAA,QADF;YAiDD,CAnDA,CAHH;UAAA;YAAA;YAAA;YAAA;UAAA;QALF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAoED,CArED,MAqEO;IACL,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;AACF,CA1EM;;GAAMN,W;UACaD,iB;;;KADbC,W"},"metadata":{},"sourceType":"module"}