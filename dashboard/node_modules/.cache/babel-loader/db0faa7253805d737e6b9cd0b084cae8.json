{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoHideDuration\", \"children\", \"component\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ClickAwayListener from '../ClickAwayListener';\nimport composeClasses from '../composeClasses';\nimport { getSnackbarUnstyledUtilityClass } from './snackbarUnstyledClasses';\nimport useSnackbar from './useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getSnackbarUnstyledUtilityClass, undefined);\n};\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Snackbar](https://mui.com/base/react-snackbar/)\r\n *\r\n * API:\r\n *\r\n * - [SnackbarUnstyled API](https://mui.com/base/api/snackbar-unstyled/)\r\n */\n\n\nconst SnackbarUnstyled = /*#__PURE__*/React.forwardRef(function SnackbarUnstyled(props, ref) {\n  const {\n    autoHideDuration = null,\n    children,\n    component,\n    disableWindowBlurListener = false,\n    exited = true,\n    onClose,\n    open,\n    resumeHideDuration,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses();\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, props, {\n    autoHideDuration,\n    disableWindowBlurListener,\n    onClose,\n    open,\n    resumeHideDuration,\n    ref\n  }));\n  const ownerState = props;\n  const Root = component || slots.root || 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: slotProps.clickAwayListener,\n    additionalProps: {\n      onClickAway\n    },\n    ownerState\n  }); // ClickAwayListener doesn't support ownerState\n\n  delete clickAwayListenerProps.ownerState; // So that we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\r\n   * The prop used to handle exited transition and unmount the component.\r\n   * @default true\r\n   */\n  exited: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\r\n   * The props used for each slot inside the Snackbar.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\r\n   * The components used for each slot inside the Snackbar.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default SnackbarUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","ClickAwayListener","composeClasses","getSnackbarUnstyledUtilityClass","useSnackbar","useSlotProps","jsx","_jsx","useUtilityClasses","slots","root","undefined","SnackbarUnstyled","forwardRef","props","ref","autoHideDuration","children","component","disableWindowBlurListener","exited","onClose","open","resumeHideDuration","slotProps","other","classes","getRootProps","onClickAway","ownerState","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","className","clickAwayListenerProps","clickAwayListener","process","env","NODE_ENV","propTypes","number","node","bool","onBlur","func","onFocus","onMouseEnter","onMouseLeave","shape","oneOfType","element","isRequired","disableReactTree","mouseEvent","oneOf","touchEvent","object"],"sources":["C:/Users/user/Documents/MyDocu/Monadashboard-final/newMonaDashboard/dashboard/node_modules/@mui/material/node_modules/@mui/base/SnackbarUnstyled/SnackbarUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"autoHideDuration\", \"children\", \"component\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"slotProps\", \"slots\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ClickAwayListener from '../ClickAwayListener';\r\nimport composeClasses from '../composeClasses';\r\nimport { getSnackbarUnstyledUtilityClass } from './snackbarUnstyledClasses';\r\nimport useSnackbar from './useSnackbar';\r\nimport { useSlotProps } from '../utils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = () => {\r\n  const slots = {\r\n    root: ['root']\r\n  };\r\n  return composeClasses(slots, getSnackbarUnstyledUtilityClass, undefined);\r\n};\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Snackbar](https://mui.com/base/react-snackbar/)\r\n *\r\n * API:\r\n *\r\n * - [SnackbarUnstyled API](https://mui.com/base/api/snackbar-unstyled/)\r\n */\r\nconst SnackbarUnstyled = /*#__PURE__*/React.forwardRef(function SnackbarUnstyled(props, ref) {\r\n  const {\r\n      autoHideDuration = null,\r\n      children,\r\n      component,\r\n      disableWindowBlurListener = false,\r\n      exited = true,\r\n      onClose,\r\n      open,\r\n      resumeHideDuration,\r\n      slotProps = {},\r\n      slots = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const classes = useUtilityClasses();\r\n  const {\r\n    getRootProps,\r\n    onClickAway\r\n  } = useSnackbar(_extends({}, props, {\r\n    autoHideDuration,\r\n    disableWindowBlurListener,\r\n    onClose,\r\n    open,\r\n    resumeHideDuration,\r\n    ref\r\n  }));\r\n  const ownerState = props;\r\n  const Root = component || slots.root || 'div';\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    getSlotProps: getRootProps,\r\n    externalForwardedProps: other,\r\n    externalSlotProps: slotProps.root,\r\n    additionalProps: {\r\n      ref\r\n    },\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  const clickAwayListenerProps = useSlotProps({\r\n    elementType: ClickAwayListener,\r\n    externalSlotProps: slotProps.clickAwayListener,\r\n    additionalProps: {\r\n      onClickAway\r\n    },\r\n    ownerState\r\n  });\r\n\r\n  // ClickAwayListener doesn't support ownerState\r\n  delete clickAwayListenerProps.ownerState;\r\n\r\n  // So that we only render active snackbars.\r\n  if (!open && exited) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\r\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\r\n      children: children\r\n    }))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SnackbarUnstyled.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\r\n  autoHideDuration: PropTypes.number,\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\r\n  disableWindowBlurListener: PropTypes.bool,\r\n  /**\r\n   * The prop used to handle exited transition and unmount the component.\r\n   * @default true\r\n   */\r\n  exited: PropTypes.bool,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseEnter: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseLeave: PropTypes.func,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\r\n  resumeHideDuration: PropTypes.number,\r\n  /**\r\n   * The props used for each slot inside the Snackbar.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\r\n      children: PropTypes.element.isRequired,\r\n      disableReactTree: PropTypes.bool,\r\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\r\n      onClickAway: PropTypes.func,\r\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\r\n    })]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the Snackbar.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport default SnackbarUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module"}