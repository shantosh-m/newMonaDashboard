{"ast":null,"code":"var _jsxFileName = \"/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/machinelist/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { Box, Container, Grid } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\n\nimport { MachineGrid } from \"./templates/MachineGrid\"; // import moment from \"moment\";\n\nimport { Title } from \"../title.js\";\nimport { useMachineContext } from \"../../contexts/machinecontext\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\"; // import Paper from \"@mui/material/Paper\";\n\nimport Link from \"@mui/material/Link\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MachineList = () => {\n  _s();\n\n  const {\n    machineData\n  } = useMachineContext();\n\n  if (machineData) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          alignItems: \"center\",\n          justifyContents: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          title: \"Molding Section Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), machineData.map((machine, index) => {\n          // if (machine.prodRate!= 0)\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true // xs={12}\n            ,\n            sm: 2,\n            md: 2,\n            lg: 2,\n            xl: 1,\n            sx: {\n              alignItems: \"center\",\n              justifyContents: \"center\",\n              maxWidth: 100,\n              marginBottom: 2,\n              margin: 0,\n              padding: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `machines/:${machine.machineID}`\n              },\n              state: { ...machine\n              },\n              style: {\n                textDecoration: \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(MachineGrid, {\n                ID: machine.machineID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"connection not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(MachineList, \"HZ8pcZ/efcaBBcbexPnL9EQOim0=\", false, function () {\n  return [useMachineContext];\n});\n\n_c = MachineList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachineList\");","map":{"version":3,"names":["React","MachineGrid","Title","useMachineContext","Container","Grid","Link","MachineList","machineData","alignItems","justifyContents","map","machine","index","maxWidth","marginBottom","margin","padding","pathname","machineID","textDecoration"],"sources":["/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/machinelist/index.js"],"sourcesContent":["import React from \"react\";\n// import { Box, Container, Grid } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\nimport { MachineGrid } from \"./templates/MachineGrid\";\n// import moment from \"moment\";\nimport { Title } from \"../title.js\";\nimport { useMachineContext } from \"../../contexts/machinecontext\";\n\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\n// import Paper from \"@mui/material/Paper\";\nimport Link from \"@mui/material/Link\";\n\nexport const MachineList = () => {\n  const { machineData } = useMachineContext();\n  if (machineData) {\n    return (\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n          sx={{ alignItems: \"center\", justifyContents: \"center\" }}\n        >\n            <Title title=\"Molding Section Statistics\" />\n\n            {machineData.map((machine, index) => {\n              // if (machine.prodRate!= 0)\n              return (\n                <Grid\n                  item\n                  // xs={12}\n                  sm={2}\n                  md={2}\n                  lg={2}\n                  xl={1}\n                  key={index}\n                  sx={{\n                    alignItems: \"center\",\n                    justifyContents: \"center\",\n                    maxWidth: 100,\n                    marginBottom: 2,\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  <Link\n                    to={{ pathname: `machines/:${machine.machineID}` }}\n                    state={{ ...machine }}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    {/* <MachineGrid\n                        machineId={machine.machineID}\n                        monaNumber={machine.monaNumber}\n                        moldId={machine.moldID}\n                        status={machine.status}\n                        moldShots={machine.moldShots}\n                        failedShots={machine.failedShots}\n                        prodRate={machine.prodRate}\n                        material={machine.material}\n                        moldMaker={machine.moldMaker}\n                        prod_startDate={moment(machine.prod_start_date).format(\n                          \"DD-MM-YYYY\"\n                        )}\n                        prod_startTime={moment(machine.prod_start_date).format(\n                          \"kk:mm:ss\"\n                        )}\n                        prod_endDate={moment(machine.prod_end_date).format(\n                          \"DD-MM-YYYY\"\n                        )}\n                        prod_endTime={moment(machine.prod_end_date).format(\n                          \"kk:mm:ss\"\n                        )} */}\n                    <MachineGrid ID={machine.machineID} />\n                  </Link>\n                </Grid>\n              );\n            })}\n        </Grid>\n      </Container>\n    );\n  } else {\n    return <div>connection not found</div>;\n  }\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CACA;;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAC/B,MAAM;IAAEC;EAAF,IAAkBL,iBAAiB,EAAzC;;EACA,IAAIK,WAAJ,EAAiB;IACf,oBACE,QAAC,SAAD;MAAW,QAAQ,EAAE,KAArB;MAAA,uBACE,QAAC,IAAD;QACE,SAAS,MADX;QAEE,OAAO,EAAE,CAFX;QAGE,EAAE,EAAE;UAAEC,UAAU,EAAE,QAAd;UAAwBC,eAAe,EAAE;QAAzC,CAHN;QAAA,wBAKI,QAAC,KAAD;UAAO,KAAK,EAAC;QAAb;UAAA;UAAA;UAAA;QAAA,QALJ,EAOKF,WAAW,CAACG,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,KAAoB;UACnC;UACA,oBACE,QAAC,IAAD;YACE,IAAI,MADN,CAEE;YAFF;YAGE,EAAE,EAAE,CAHN;YAIE,EAAE,EAAE,CAJN;YAKE,EAAE,EAAE,CALN;YAME,EAAE,EAAE,CANN;YAQE,EAAE,EAAE;cACFJ,UAAU,EAAE,QADV;cAEFC,eAAe,EAAE,QAFf;cAGFI,QAAQ,EAAE,GAHR;cAIFC,YAAY,EAAE,CAJZ;cAKFC,MAAM,EAAE,CALN;cAMFC,OAAO,EAAE;YANP,CARN;YAAA,uBAiBE,QAAC,IAAD;cACE,EAAE,EAAE;gBAAEC,QAAQ,EAAG,aAAYN,OAAO,CAACO,SAAU;cAA3C,CADN;cAEE,KAAK,EAAE,EAAE,GAAGP;cAAL,CAFT;cAGE,KAAK,EAAE;gBAAEQ,cAAc,EAAE;cAAlB,CAHT;cAAA,uBA2BE,QAAC,WAAD;gBAAa,EAAE,EAAER,OAAO,CAACO;cAAzB;gBAAA;gBAAA;gBAAA;cAAA;YA3BF;cAAA;cAAA;cAAA;YAAA;UAjBF,GAOON,KAPP;YAAA;YAAA;YAAA;UAAA,QADF;QAiDD,CAnDA,CAPL;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAgED,CAjED,MAiEO;IACL,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;AACF,CAtEM;;GAAMN,W;UACaJ,iB;;;KADbI,W"},"metadata":{},"sourceType":"module"}