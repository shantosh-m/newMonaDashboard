{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\Desktop\\\\monaDashboard\\\\dashboard\\\\src\\\\components\\\\machinelist\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import React from \"react\";\n// import { Box, Container, Grid } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\n\nimport { MachineGrid } from \"./utils/machinegrid\";\nimport TimeGrid from \"./utils/timegrid\"; // import moment from \"moment\";\n\nimport { Title } from \"./utils/title\"; //import { useMachineContext } from \"../../contexts/machinecontext\";\n\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\"; // import Paper from \"@mui/material/Paper\";\n\nimport Link from \"@mui/material/Link\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MachineList = () => {\n  _s();\n\n  // const { machineData } = useMachineContext();\n  const [machines, setMachines] = useState([]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateMachineData();\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const updateMachineData = () => {\n    const updatedMachines = machines.map((machine, index) => {\n      if (index < 23) {\n        let mold_shots = Math.floor(Math.random() * (100 - 20 + 1)) + 20;\n        let failed_shots = Math.floor(Math.random() * (20 - 0 + 1)) + 0;\n        let status = machine.status;\n\n        if (Math.random() < 0.1) {\n          status = \"stuck\";\n        } else if (Math.random() < 0.2) {\n          status = \"notWorking\";\n        } else {\n          status = \"working\";\n        }\n\n        return { ...machine,\n          moldShots: mold_shots,\n          failedShots: failed_shots,\n          status: status\n        };\n      } else {\n        return machine; // No updates for machines beyond the first 23\n      }\n    });\n    setMachines(updatedMachines);\n  }; // const Material = [\"GPPS\", \"MABS\", \"TPR\", \"HIPS\", \"ABS\"];\n  // const Protector = [\n  //   \"Protector1\",\n  //   \"Protector2\",\n  //   \"Protector3\",\n  //   \"Protector4\",\n  //   \"Protector5\",\n  //   \"Protector6\",\n  //   \"Protector7\",\n  //   \"Protector8\",\n  //   \"Protector9\",\n  //   \"Protector10\",\n  //   \"Protector11\",\n  //   \"Protector12\",\n  //   \"Protector13\",\n  //   \"Protector14\",\n  //   \"Protector15\",\n  //   \"Protector16\",\n  //   \"Protector17\",\n  //   \"Protector18\",\n  //   \"Protector19\",\n  //   \"Protector20\",\n  //   \"Protector21\",\n  //   \"Protector22\",\n  //   \"Protector23\",\n  // ];\n  // const Maker = [\n  //   \"Maker1\",\n  //   \"Maker2\",\n  //   \"Maker3\",\n  //   \"Maker4\",\n  //   \"Maker5\",\n  //   \"Maker6\",\n  //   \"Maker7\",\n  //   \"Maker8\",\n  //   \"Maker9\",\n  //   \"Maker10\",\n  //   \"Maker11\",\n  //   \"Maker12\",\n  //   \"Maker13\",\n  //   \"Maker14\",\n  //   \"Maker15\",\n  //   \"Maker16\",\n  //   \"Maker17\",\n  //   \"Maker18\",\n  //   \"Maker19\",\n  //   \"Maker20\",\n  //   \"Maker21\",\n  //   \"Maker22\",\n  //   \"Maker23\",\n  // ];\n  // const mNumber = [\n  //   \"M#123\",\n  //   \"M#124\",\n  //   \"M#125\",\n  //   \"M#126\",\n  //   \"M#127\",\n  //   \"M#128_1\",\n  //   \"M#129\",\n  //   \"M#130\",\n  //   \"M#131_1\",\n  //   \"M#132\",\n  //   \"M#133_2\",\n  //   \"M#134\",\n  //   \"M#135\",\n  //   \"M#133_3\",\n  //   \"M#137\",\n  //   \"M#138\",\n  //   \"M#128_2\",\n  //   \"M#140\",\n  //   \"M#141\",\n  //   \"M#142\",\n  //   \"M#143\",\n  //   \"M#144\",\n  //   \"M#145\",\n  // ];\n\n\n  if (machines.length > 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        title: \"Molding Section Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        sx: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContents: \"center\"\n        },\n        children: machines.map((machine, index) => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 11,\n            sm: 4,\n            md: 2,\n            lg: 2,\n            m: {\n              sm: 2,\n              md: 4,\n              lg: 0\n            },\n            sx: {\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            children: index !== 0 && index < 24 ? /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `machines/:${machine.machineID}`\n              },\n              state: { ...machine\n              },\n              style: {\n                textDecoration: \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(MachineGrid, {\n                ID: machine.machineID,\n                monaNumber: machine.monaNumber,\n                moldProtector: machine.moldProtector,\n                status: machine.status,\n                moldMaker: machine.moldMaker,\n                moldMaterial: machine.moldMaterial,\n                moldShots: machine.moldShots,\n                failedShots: machine.failedShots\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(TimeGrid, {}, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"connection not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(MachineList, \"etL6ZTbqU58vGaTbtLSSX9BCKmI=\");\n\n_c = MachineList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachineList\");","map":{"version":3,"names":["React","useEffect","useState","MachineGrid","TimeGrid","Title","Container","Grid","Link","MachineList","machines","setMachines","intervalId","setInterval","updateMachineData","clearInterval","updatedMachines","map","machine","index","mold_shots","Math","floor","random","failed_shots","status","moldShots","failedShots","length","display","alignItems","justifyContents","sm","md","lg","justifyContent","pathname","machineID","textDecoration","monaNumber","moldProtector","moldMaker","moldMaterial"],"sources":["C:/Users/94776/Desktop/monaDashboard/dashboard/src/components/machinelist/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import React from \"react\";\n// import { Box, Container, Grid } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\nimport { MachineGrid } from \"./utils/machinegrid\";\nimport TimeGrid from \"./utils/timegrid\";\n// import moment from \"moment\";\nimport { Title } from \"./utils/title\";\n//import { useMachineContext } from \"../../contexts/machinecontext\";\n\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\n// import Paper from \"@mui/material/Paper\";\nimport Link from \"@mui/material/Link\";\n\nexport const MachineList = () => {\n  // const { machineData } = useMachineContext();\n\n  const [machines, setMachines] = useState([]);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateMachineData();\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const updateMachineData = () => {\n    const updatedMachines = machines.map((machine, index) => {\n      if (index < 23) {\n        let mold_shots = Math.floor(Math.random() * (100 - 20 + 1)) + 20;\n        let failed_shots = Math.floor(Math.random() * (20 - 0 + 1)) + 0;\n\n        let status = machine.status;\n\n        if (Math.random() < 0.1) {\n          status = \"stuck\";\n        } else if (Math.random() < 0.2) {\n          status = \"notWorking\";\n        } else {\n          status = \"working\";\n        }\n\n        return {\n          ...machine,\n          moldShots: mold_shots,\n          failedShots: failed_shots,\n          status: status,\n        };\n      } else {\n        return machine; // No updates for machines beyond the first 23\n      }\n    });\n\n    setMachines(updatedMachines);\n  };\n\n  // const Material = [\"GPPS\", \"MABS\", \"TPR\", \"HIPS\", \"ABS\"];\n\n  // const Protector = [\n  //   \"Protector1\",\n  //   \"Protector2\",\n  //   \"Protector3\",\n  //   \"Protector4\",\n  //   \"Protector5\",\n  //   \"Protector6\",\n  //   \"Protector7\",\n  //   \"Protector8\",\n  //   \"Protector9\",\n  //   \"Protector10\",\n  //   \"Protector11\",\n  //   \"Protector12\",\n  //   \"Protector13\",\n  //   \"Protector14\",\n  //   \"Protector15\",\n  //   \"Protector16\",\n  //   \"Protector17\",\n  //   \"Protector18\",\n  //   \"Protector19\",\n  //   \"Protector20\",\n  //   \"Protector21\",\n  //   \"Protector22\",\n  //   \"Protector23\",\n  // ];\n\n  // const Maker = [\n  //   \"Maker1\",\n  //   \"Maker2\",\n  //   \"Maker3\",\n  //   \"Maker4\",\n  //   \"Maker5\",\n  //   \"Maker6\",\n  //   \"Maker7\",\n  //   \"Maker8\",\n  //   \"Maker9\",\n  //   \"Maker10\",\n  //   \"Maker11\",\n  //   \"Maker12\",\n  //   \"Maker13\",\n  //   \"Maker14\",\n  //   \"Maker15\",\n  //   \"Maker16\",\n  //   \"Maker17\",\n  //   \"Maker18\",\n  //   \"Maker19\",\n  //   \"Maker20\",\n  //   \"Maker21\",\n  //   \"Maker22\",\n  //   \"Maker23\",\n  // ];\n\n  // const mNumber = [\n  //   \"M#123\",\n  //   \"M#124\",\n  //   \"M#125\",\n  //   \"M#126\",\n  //   \"M#127\",\n  //   \"M#128_1\",\n  //   \"M#129\",\n  //   \"M#130\",\n  //   \"M#131_1\",\n  //   \"M#132\",\n  //   \"M#133_2\",\n  //   \"M#134\",\n  //   \"M#135\",\n  //   \"M#133_3\",\n  //   \"M#137\",\n  //   \"M#138\",\n  //   \"M#128_2\",\n  //   \"M#140\",\n  //   \"M#141\",\n  //   \"M#142\",\n  //   \"M#143\",\n  //   \"M#144\",\n  //   \"M#145\",\n  // ];\n\n  if (machines.length > 0) {\n    return (\n      <Container maxWidth={false}>\n        <Title title=\"Molding Section Statistics\" />\n\n        <Grid\n          container\n          spacing={4}\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContents: \"center\",\n          }}\n        >\n          {machines.map((machine, index) => {\n            return (\n              <Grid\n                item\n                xs={11}\n                sm={4}\n                md={2}\n                lg={2}\n                m={{ sm: 2, md: 4, lg: 0 }}\n                key={index}\n                sx={{\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {index !== 0 && index < 24 ? (\n                  <Link\n                    to={{ pathname: `machines/:${machine.machineID}` }}\n                    state={{ ...machine }}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <MachineGrid\n                      ID={machine.machineID}\n                      monaNumber={machine.monaNumber}\n                      moldProtector={machine.moldProtector}\n                      status={machine.status}\n                      moldMaker={machine.moldMaker}\n                      moldMaterial={machine.moldMaterial}\n                      moldShots={machine.moldShots}\n                      failedShots={machine.failedShots}\n                    />\n                  </Link>\n                ) : (\n                  <TimeGrid key={index} />\n                )}\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n    );\n  } else {\n    return <div>connection not found</div>;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}