{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst commons_js_1 = require(\"./commons.js\");\n\nconst base64_arraybuffer_js_1 = require(\"./contrib/base64-arraybuffer.js\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n\n  const type = encodedPacket.charAt(0);\n\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n\n  const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\n\n  if (!packetType) {\n    return commons_js_1.ERROR_PACKET;\n  }\n\n  return encodedPacket.length > 1 ? {\n    type: commons_js_1.PACKET_TYPES_REVERSE[type],\n    data: encodedPacket.substring(1)\n  } : {\n    type: commons_js_1.PACKET_TYPES_REVERSE[type]\n  };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (withNativeArrayBuffer) {\n    const decoded = (0, base64_arraybuffer_js_1.decode)(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return {\n      base64: true,\n      data\n    }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n\n    case \"arraybuffer\":\n    default:\n      return data;\n    // assuming the data is already an ArrayBuffer\n  }\n};\n\nexports.default = decodePacket;","map":{"version":3,"names":["Object","defineProperty","exports","value","commons_js_1","require","base64_arraybuffer_js_1","withNativeArrayBuffer","ArrayBuffer","decodePacket","encodedPacket","binaryType","type","data","mapBinary","charAt","decodeBase64Packet","substring","packetType","PACKET_TYPES_REVERSE","ERROR_PACKET","length","decoded","decode","base64","Blob","default"],"sources":["C:/Users/user/Documents/MyDocu/Monadashboard-final/newMonaDashboard/dashboard/node_modules/engine.io-parser/build/cjs/decodePacket.browser.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst commons_js_1 = require(\"./commons.js\");\r\nconst base64_arraybuffer_js_1 = require(\"./contrib/base64-arraybuffer.js\");\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\nconst decodePacket = (encodedPacket, binaryType) => {\r\n    if (typeof encodedPacket !== \"string\") {\r\n        return {\r\n            type: \"message\",\r\n            data: mapBinary(encodedPacket, binaryType)\r\n        };\r\n    }\r\n    const type = encodedPacket.charAt(0);\r\n    if (type === \"b\") {\r\n        return {\r\n            type: \"message\",\r\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\r\n        };\r\n    }\r\n    const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\r\n    if (!packetType) {\r\n        return commons_js_1.ERROR_PACKET;\r\n    }\r\n    return encodedPacket.length > 1\r\n        ? {\r\n            type: commons_js_1.PACKET_TYPES_REVERSE[type],\r\n            data: encodedPacket.substring(1)\r\n        }\r\n        : {\r\n            type: commons_js_1.PACKET_TYPES_REVERSE[type]\r\n        };\r\n};\r\nconst decodeBase64Packet = (data, binaryType) => {\r\n    if (withNativeArrayBuffer) {\r\n        const decoded = (0, base64_arraybuffer_js_1.decode)(data);\r\n        return mapBinary(decoded, binaryType);\r\n    }\r\n    else {\r\n        return { base64: true, data }; // fallback for old browsers\r\n    }\r\n};\r\nconst mapBinary = (data, binaryType) => {\r\n    switch (binaryType) {\r\n        case \"blob\":\r\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\r\n        case \"arraybuffer\":\r\n        default:\r\n            return data; // assuming the data is already an ArrayBuffer\r\n    }\r\n};\r\nexports.default = decodePacket;\r\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,iCAAD,CAAvC;;AACA,MAAME,qBAAqB,GAAG,OAAOC,WAAP,KAAuB,UAArD;;AACA,MAAMC,YAAY,GAAG,CAACC,aAAD,EAAgBC,UAAhB,KAA+B;EAChD,IAAI,OAAOD,aAAP,KAAyB,QAA7B,EAAuC;IACnC,OAAO;MACHE,IAAI,EAAE,SADH;MAEHC,IAAI,EAAEC,SAAS,CAACJ,aAAD,EAAgBC,UAAhB;IAFZ,CAAP;EAIH;;EACD,MAAMC,IAAI,GAAGF,aAAa,CAACK,MAAd,CAAqB,CAArB,CAAb;;EACA,IAAIH,IAAI,KAAK,GAAb,EAAkB;IACd,OAAO;MACHA,IAAI,EAAE,SADH;MAEHC,IAAI,EAAEG,kBAAkB,CAACN,aAAa,CAACO,SAAd,CAAwB,CAAxB,CAAD,EAA6BN,UAA7B;IAFrB,CAAP;EAIH;;EACD,MAAMO,UAAU,GAAGd,YAAY,CAACe,oBAAb,CAAkCP,IAAlC,CAAnB;;EACA,IAAI,CAACM,UAAL,EAAiB;IACb,OAAOd,YAAY,CAACgB,YAApB;EACH;;EACD,OAAOV,aAAa,CAACW,MAAd,GAAuB,CAAvB,GACD;IACET,IAAI,EAAER,YAAY,CAACe,oBAAb,CAAkCP,IAAlC,CADR;IAEEC,IAAI,EAAEH,aAAa,CAACO,SAAd,CAAwB,CAAxB;EAFR,CADC,GAKD;IACEL,IAAI,EAAER,YAAY,CAACe,oBAAb,CAAkCP,IAAlC;EADR,CALN;AAQH,CA1BD;;AA2BA,MAAMI,kBAAkB,GAAG,CAACH,IAAD,EAAOF,UAAP,KAAsB;EAC7C,IAAIJ,qBAAJ,EAA2B;IACvB,MAAMe,OAAO,GAAG,CAAC,GAAGhB,uBAAuB,CAACiB,MAA5B,EAAoCV,IAApC,CAAhB;IACA,OAAOC,SAAS,CAACQ,OAAD,EAAUX,UAAV,CAAhB;EACH,CAHD,MAIK;IACD,OAAO;MAAEa,MAAM,EAAE,IAAV;MAAgBX;IAAhB,CAAP,CADC,CAC8B;EAClC;AACJ,CARD;;AASA,MAAMC,SAAS,GAAG,CAACD,IAAD,EAAOF,UAAP,KAAsB;EACpC,QAAQA,UAAR;IACI,KAAK,MAAL;MACI,OAAOE,IAAI,YAAYL,WAAhB,GAA8B,IAAIiB,IAAJ,CAAS,CAACZ,IAAD,CAAT,CAA9B,GAAiDA,IAAxD;;IACJ,KAAK,aAAL;IACA;MACI,OAAOA,IAAP;IAAa;EALrB;AAOH,CARD;;AASAX,OAAO,CAACwB,OAAR,GAAkBjB,YAAlB"},"metadata":{},"sourceType":"script"}