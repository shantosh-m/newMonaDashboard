{"ast":null,"code":"var _jsxFileName = \"/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/pages/MachinePage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import React from \"react\";\nimport { Box, Container, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { MachineGrid } from \"../machinegrid\";\nimport moment from \"moment\";\nimport { Title } from \"../title.js\"; // import React, { createContext, useContext, useState } from 'react';\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MachineContext = /*#__PURE__*/createContext();\nexport const MachineProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [machineData, setMachineData] = useState();\n  return /*#__PURE__*/_jsxDEV(MachineContext.Provider, {\n    value: {\n      machineData,\n      setMachineData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}; // export const MachinePage = ({ machineData }) => {\n\n_s(MachineProvider, \"VB+Ca3dBoOf5evyuOgkIAa7sUsc=\");\n\n_c = MachineProvider;\nexport const MachinePage = () => {\n  _s2();\n\n  const {\n    machineData\n  } = useMachineContext();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          alignItems: \"center\",\n          justifyContents: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            title: \"Molding Section Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), machineData.map((machine, index) => {\n            // if (machine.prodRate!= 0)\n            machine.status = \"Online\"; // else\n            // machine.status = \"Offline\"\n\n            if (machine.material === undefined) machine.material = \"none\";\n            if (machine.moldMaker === undefined) machine.moldMaker = \"none\";\n            console.log(machine.moldMaker);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true // xs={12}\n              ,\n              sm: 2,\n              md: 2,\n              lg: 2,\n              xl: 1,\n              sx: {\n                alignItems: \"center\",\n                justifyContents: \"center\",\n                maxWidth: 100,\n                marginBottom: 2,\n                margin: 0,\n                padding: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `machines/:${machine.machineID}`\n                },\n                state: { ...machine\n                },\n                style: {\n                  textDecoration: \"none\"\n                },\n                children: /*#__PURE__*/_jsxDEV(MachineGrid, {\n                  machineId: machine.machineID,\n                  monaNumber: machine.monaNumber,\n                  moldId: machine.moldID,\n                  status: machine.status,\n                  moldShots: machine.moldShots,\n                  failedShots: machine.failedShots,\n                  prodRate: machine.prodRate,\n                  material: machine.material,\n                  moldMaker: machine.moldMaker,\n                  prod_startDate: moment(machine.prod_start_date).format(\"DD-MM-YYYY\"),\n                  prod_startTime: moment(machine.prod_start_date).format(\"kk:mm:ss\"),\n                  prod_endDate: moment(machine.prod_end_date).format(\"DD-MM-YYYY\"),\n                  prod_endTime: moment(machine.prod_end_date).format(\"kk:mm:ss\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MachinePage, \"HZ8pcZ/efcaBBcbexPnL9EQOim0=\", true);\n\n_c2 = MachinePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MachineProvider\");\n$RefreshReg$(_c2, \"MachinePage\");","map":{"version":3,"names":["Box","Container","Grid","Link","MachineGrid","moment","Title","React","createContext","useState","MachineContext","MachineProvider","children","machineData","setMachineData","MachinePage","useMachineContext","alignItems","justifyContents","map","machine","index","status","material","undefined","moldMaker","console","log","maxWidth","marginBottom","margin","padding","pathname","machineID","textDecoration","monaNumber","moldID","moldShots","failedShots","prodRate","prod_start_date","format","prod_end_date"],"sources":["/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/pages/MachinePage.js"],"sourcesContent":["// import React from \"react\";\nimport { Box, Container, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { MachineGrid } from \"../machinegrid\";\nimport moment from \"moment\";\nimport { Title } from \"../title.js\";\n\n// import React, { createContext, useContext, useState } from 'react';\n\nimport React, { createContext, useState } from \"react\";\n\nconst MachineContext = createContext();\n\nexport const MachineProvider = ({ children }) => {\n  const [machineData, setMachineData] = useState(/* Your initial machine data */);\n\n  return (\n    <MachineContext.Provider value={{ machineData, setMachineData }}>\n      {children}\n    </MachineContext.Provider>\n  );\n};\n\n// export const MachinePage = ({ machineData }) => {\nexport const MachinePage = () => {\n\n  const { machineData } = useMachineContext();\n\n  return (\n    <Box component=\"main\">\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n          sx={{ alignItems: \"center\", justifyContents: \"center\" }}\n        >\n          <React.Fragment>\n            <Title title=\"Molding Section Statistics\" />\n\n            {machineData.map((machine, index) => {\n              // if (machine.prodRate!= 0)\n              machine.status = \"Online\";\n              // else\n              // machine.status = \"Offline\"\n\n              if (machine.material === undefined) machine.material = \"none\";\n              if (machine.moldMaker === undefined) machine.moldMaker = \"none\";\n\n              console.log(machine.moldMaker);\n              return (\n                <Grid\n                  item\n                  // xs={12}\n                  sm={2}\n                  md={2}\n                  lg={2}\n                  xl={1}\n                  key={index}\n                  sx={{\n                    alignItems: \"center\",\n                    justifyContents: \"center\",\n                    maxWidth: 100,\n                    marginBottom: 2,\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  <Link\n                    to={{ pathname: `machines/:${machine.machineID}` }}\n                    state={{ ...machine }}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <MachineGrid\n                      machineId={machine.machineID}\n                      monaNumber={machine.monaNumber}\n                      moldId={machine.moldID}\n                      status={machine.status}\n                      moldShots={machine.moldShots}\n                      failedShots={machine.failedShots}\n                      prodRate={machine.prodRate}\n                      material={machine.material}\n                      moldMaker={machine.moldMaker}\n                      prod_startDate={moment(machine.prod_start_date).format(\n                        \"DD-MM-YYYY\"\n                      )}\n                      prod_startTime={moment(machine.prod_start_date).format(\n                        \"kk:mm:ss\"\n                      )}\n                      prod_endDate={moment(machine.prod_end_date).format(\n                        \"DD-MM-YYYY\"\n                      )}\n                      prod_endTime={moment(machine.prod_end_date).format(\n                        \"kk:mm:ss\"\n                      )}\n                    />\n                  </Link>\n                </Grid>\n              );\n            })}\n          </React.Fragment>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}