{"ast":null,"code":"var _jsxFileName = \"/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/pages/MachinePage.js\";\nimport React from \"react\";\nimport { Box, Container, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Machine } from \"../machine\";\nimport moment from \"moment\";\nimport { Title } from \"../title.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MachinePage = _ref => {\n  let {\n    machineData\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          alignItems: \"center\",\n          justifyContents: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            title: \"Molding Section Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), machineData.map((machine, index) => {\n            // if (machine.prodRate!= 0)\n            machine.status = \"Online\"; // else\n            // machine.status = \"Offline\"\n\n            if (machine.material === undefined) machine.material = \"none\";\n            if (machine.moldMaker === undefined) machine.moldMaker = \"none\";\n            console.log(machine.moldMaker);\n            return (\n              /*#__PURE__*/\n              // <Grid\n              //   item\n              //   // xs={12}\n              //   sm={2}\n              //   md={2}\n              //   lg={2}\n              //   xl={1}\n              //   key={index}\n              //   sx={{\n              //     alignItems: \"center\",\n              //     justifyContents: \"center\",\n              //     maxWidth: 100,\n              //     marginBottom: 2,\n              //     margin: 0,\n              //     padding: 0,\n              //   }}\n              // >\n              //   <Link\n              //     to={{ pathname: `machines/:${machine.machineID}` }}\n              //     state={{ ...machine }}\n              //     style={{ textDecoration: \"none\" }}\n              //   >\n              //     <Machine\n              //       machineId={machine.machineID}\n              //       monaNumber={machine.monaNumber}\n              //       moldId={machine.moldID}\n              //       status={machine.status}\n              //       moldShots={machine.moldShots}\n              //       failedShots={machine.failedShots}\n              //       prodRate={machine.prodRate}\n              //       material={machine.material}\n              //       moldMaker={machine.moldMaker}\n              //       prod_startDate={moment(machine.prod_start_date).format(\n              //         \"DD-MM-YYYY\"\n              //       )}\n              //       prod_startTime={moment(machine.prod_start_date).format(\n              //         \"kk:mm:ss\"\n              //       )}\n              //       prod_endDate={moment(machine.prod_end_date).format(\n              //         \"DD-MM-YYYY\"\n              //       )}\n              //       prod_endTime={moment(machine.prod_end_date).format(\n              //         \"kk:mm:ss\"\n              //       )}\n              //     />\n              //   </Link>\n              // </Grid>\n              _jsxDEV(\"div\", {\n                children: \"ghg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            );\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = MachinePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachinePage\");","map":{"version":3,"names":["React","Box","Container","Grid","Link","Machine","moment","Title","MachinePage","machineData","alignItems","justifyContents","map","machine","index","status","material","undefined","moldMaker","console","log"],"sources":["/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/pages/MachinePage.js"],"sourcesContent":["import React from \"react\";\nimport { Box, Container, Grid } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Machine } from \"../machine\";\nimport moment from \"moment\";\nimport { Title } from \"../title.js\";\n\nexport const MachinePage = ({ machineData }) => {\n  return (\n    <Box component=\"main\">\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n          sx={{ alignItems: \"center\", justifyContents: \"center\" }}\n        >\n          <React.Fragment>\n            <Title title=\"Molding Section Statistics\" />\n\n            {machineData.map((machine, index) => {\n              // if (machine.prodRate!= 0)\n              machine.status = \"Online\";\n              // else\n              // machine.status = \"Offline\"\n\n              if (machine.material === undefined) machine.material = \"none\";\n              if (machine.moldMaker === undefined) machine.moldMaker = \"none\";\n\n              console.log(machine.moldMaker);\n              return (\n                // <Grid\n                //   item\n                //   // xs={12}\n                //   sm={2}\n                //   md={2}\n                //   lg={2}\n                //   xl={1}\n                //   key={index}\n                //   sx={{\n                //     alignItems: \"center\",\n                //     justifyContents: \"center\",\n                //     maxWidth: 100,\n                //     marginBottom: 2,\n                //     margin: 0,\n                //     padding: 0,\n                //   }}\n                // >\n                //   <Link\n                //     to={{ pathname: `machines/:${machine.machineID}` }}\n                //     state={{ ...machine }}\n                //     style={{ textDecoration: \"none\" }}\n                //   >\n                //     <Machine\n                //       machineId={machine.machineID}\n                //       monaNumber={machine.monaNumber}\n                //       moldId={machine.moldID}\n                //       status={machine.status}\n                //       moldShots={machine.moldShots}\n                //       failedShots={machine.failedShots}\n                //       prodRate={machine.prodRate}\n                //       material={machine.material}\n                //       moldMaker={machine.moldMaker}\n                //       prod_startDate={moment(machine.prod_start_date).format(\n                //         \"DD-MM-YYYY\"\n                //       )}\n                //       prod_startTime={moment(machine.prod_start_date).format(\n                //         \"kk:mm:ss\"\n                //       )}\n                //       prod_endDate={moment(machine.prod_end_date).format(\n                //         \"DD-MM-YYYY\"\n                //       )}\n                //       prod_endTime={moment(machine.prod_end_date).format(\n                //         \"kk:mm:ss\"\n                //       )}\n                //     />\n                //   </Link>\n                // </Grid>\n                <div>ghg</div>\n              );\n            })}\n          </React.Fragment>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,eAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAqB;EAAA,IAApB;IAAEC;EAAF,CAAoB;EAC9C,oBACE,QAAC,GAAD;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE,QAAC,SAAD;MAAW,QAAQ,EAAE,KAArB;MAAA,uBACE,QAAC,IAAD;QACE,SAAS,MADX;QAEE,OAAO,EAAE,CAFX;QAGE,EAAE,EAAE;UAAEC,UAAU,EAAE,QAAd;UAAwBC,eAAe,EAAE;QAAzC,CAHN;QAAA,uBAKE,QAAC,KAAD,CAAO,QAAP;UAAA,wBACE,QAAC,KAAD;YAAO,KAAK,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QADF,EAGGF,WAAW,CAACG,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,KAAoB;YACnC;YACAD,OAAO,CAACE,MAAR,GAAiB,QAAjB,CAFmC,CAGnC;YACA;;YAEA,IAAIF,OAAO,CAACG,QAAR,KAAqBC,SAAzB,EAAoCJ,OAAO,CAACG,QAAR,GAAmB,MAAnB;YACpC,IAAIH,OAAO,CAACK,SAAR,KAAsBD,SAA1B,EAAqCJ,OAAO,CAACK,SAAR,GAAoB,MAApB;YAErCC,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACK,SAApB;YACA;cAAA;cACE;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAhDF;UAkDD,CA5DA,CAHH;QAAA;UAAA;UAAA;UAAA;QAAA;MALF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6ED,CA9EM;KAAMV,W"},"metadata":{},"sourceType":"module"}