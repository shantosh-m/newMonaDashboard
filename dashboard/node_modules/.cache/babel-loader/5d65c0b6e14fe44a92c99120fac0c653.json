{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\Desktop\\\\monaDashboard\\\\dashboard\\\\src\\\\components\\\\machinelist\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3000\"); // Replace with the actual server URL and port\n\nconst App = () => {\n  _s();\n\n  const [machineData, setMachineData] = useState({});\n  useEffect(() => {\n    // Listen for the \"connection\" event from the server\n    socket.on(\"connection\", data => {\n      setMachineData(data);\n    }); // Cleanup function to disconnect the socket when the component unmounts\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Machine Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(machineData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"scJUpbPiVUbLDg7dbanD8zSINOY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","socket","App","machineData","setMachineData","on","data","disconnect","JSON","stringify"],"sources":["C:/Users/94776/Desktop/monaDashboard/dashboard/src/components/machinelist/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:3000\"); // Replace with the actual server URL and port\n\nconst App = () => {\n  const [machineData, setMachineData] = useState({});\n\n  useEffect(() => {\n    // Listen for the \"connection\" event from the server\n    socket.on(\"connection\", (data) => {\n      setMachineData(data);\n    });\n\n    // Cleanup function to disconnect the socket when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Machine Data</h1>\n      <pre>{JSON.stringify(machineData, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB,C,CAA4C;;AAE5C,MAAME,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACd;IACAG,MAAM,CAACI,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;MAChCF,cAAc,CAACE,IAAD,CAAd;IACD,CAFD,EAFc,CAMd;;IACA,OAAO,MAAM;MACXL,MAAM,CAACM,UAAP;IACD,CAFD;EAGD,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMC,IAAI,CAACC,SAAL,CAAeN,WAAf,EAA4B,IAA5B,EAAkC,CAAlC;IAAN;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CArBD;;GAAMD,G;;KAAAA,G;AAuBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}