{"ast":null,"code":"var _jsxFileName = \"E:\\\\new Dashboard\\\\dashboard\\\\src\\\\contexts\\\\machinecontext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// MachineContext.js\nimport { createContext, useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MachineContext = /*#__PURE__*/createContext();\n\nconst {\n  io\n} = require(\"socket.io-client\");\n\nconst socket = io(process.env.REACT_APP_SERVER_BASE_URL, {\n  transports: [\"websocket\"]\n});\nexport const MachineProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [machineData, setMachineData] = useState();\n\n  const fetchDataFromBackend = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3002/gettingMachineInfo\");\n      setMachineData(response.data);\n      console.log(\"Backend API Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error fetching machine data:\", error);\n    }\n  };\n\n  const setupSocketListener = () => {\n    const socket = io(\"http://localhost:3002\"); // Change the URL based on your socket server\n\n    socket.on(\"machineDataUpdate\", data => {\n      // Update the machineData state with real-time data from the socket\n      setMachineData(data);\n      console.log(\"Socket update:\", data);\n    });\n    socket.on(\"machines\", () => {\n      console.log(\"Connected to socket\");\n      console.log(\"socket data \", data);\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from socket\");\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"connect_error\", err => {\n      console.log(`connect_error due to ${err.message}`);\n    });\n    socket.on(\"machines\", data => {\n      data[0].status = \"Online\";\n      setMachineData(data);\n    }); // Clean up the socket when the component unmounts\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(MachineContext.Provider, {\n    value: {\n      machineData,\n      setMachineData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MachineProvider, \"9ukQ3/1AJ2Gl+iZphDP9yxtVErA=\");\n\n_c = MachineProvider;\nexport const useMachineContext = () => {\n  _s2();\n\n  return useContext(MachineContext);\n};\n\n_s2(useMachineContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MachineProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","MachineContext","io","require","socket","process","env","REACT_APP_SERVER_BASE_URL","transports","MachineProvider","children","machineData","setMachineData","fetchDataFromBackend","response","axios","get","data","console","log","error","setupSocketListener","on","err","message","status","disconnect","useMachineContext"],"sources":["E:/new Dashboard/dashboard/src/contexts/machinecontext.js"],"sourcesContent":["// MachineContext.js\nimport { createContext, useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst MachineContext = createContext();\n\nconst { io } = require(\"socket.io-client\");\nconst socket = io(process.env.REACT_APP_SERVER_BASE_URL, {\n  transports: [\"websocket\"],\n});\n\nexport const MachineProvider = ({ children }) => {\n  const [machineData, setMachineData] = useState();\n\n  const fetchDataFromBackend = async () => {\n    try {\n      const response = await axios.get(\n        \"http://localhost:3002/gettingMachineInfo\"\n      );\n      setMachineData(response.data);\n      console.log(\"Backend API Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error fetching machine data:\", error);\n    }\n  };\n\n  const setupSocketListener = () => {\n    const socket = io(\"http://localhost:3002\"); // Change the URL based on your socket server\n\n    socket.on(\"machineDataUpdate\", (data) => {\n      // Update the machineData state with real-time data from the socket\n      setMachineData(data);\n      console.log(\"Socket update:\", data);\n    });\n\n    socket.on(\"machines\", () => {\n      console.log(\"Connected to socket\");\n      console.log(\"socket data \", data);\n    });\n\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from socket\");\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"connect_error\", (err) => {\n      console.log(`connect_error due to ${err.message}`);\n    });\n    socket.on(\"machines\", (data) => {\n      data[0].status = \"Online\";\n\n      setMachineData(data);\n    }); // Clean up the socket when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  return (\n    <MachineContext.Provider value={{ machineData, setMachineData }}>\n      {children}\n    </MachineContext.Provider>\n  );\n};\n\nexport const useMachineContext = () => {\n  return useContext(MachineContext);\n};\n"],"mappings":";;;;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;;AAEA,MAAM;EAAEK;AAAF,IAASC,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAO,CAACC,GAAR,CAAYC,yBAAb,EAAwC;EACvDC,UAAU,EAAE,CAAC,WAAD;AAD2C,CAAxC,CAAjB;AAIA,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;;EAEA,MAAMc,oBAAoB,GAAG,YAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CACrB,0CADqB,CAAvB;MAGAJ,cAAc,CAACE,QAAQ,CAACG,IAAV,CAAd;MACAC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCL,QAAQ,CAACG,IAA9C;IACD,CAND,CAME,OAAOG,KAAP,EAAc;MACdF,OAAO,CAACE,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;IACD;EACF,CAVD;;EAYA,MAAMC,mBAAmB,GAAG,MAAM;IAChC,MAAMjB,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAjB,CADgC,CACY;;IAE5CE,MAAM,CAACkB,EAAP,CAAU,mBAAV,EAAgCL,IAAD,IAAU;MACvC;MACAL,cAAc,CAACK,IAAD,CAAd;MACAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B;IACD,CAJD;IAMAb,MAAM,CAACkB,EAAP,CAAU,UAAV,EAAsB,MAAM;MAC1BJ,OAAO,CAACC,GAAR,CAAY,qBAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;IACD,CAHD;IAKAb,MAAM,CAACkB,EAAP,CAAU,YAAV,EAAwB,MAAM;MAC5BJ,OAAO,CAACC,GAAR,CAAY,0BAAZ;IACD,CAFD;EAGD,CAjBD;;EAmBAnB,SAAS,CAAC,MAAM;IACdI,MAAM,CAACkB,EAAP,CAAU,eAAV,EAA4BC,GAAD,IAAS;MAClCL,OAAO,CAACC,GAAR,CAAa,wBAAuBI,GAAG,CAACC,OAAQ,EAAhD;IACD,CAFD;IAGApB,MAAM,CAACkB,EAAP,CAAU,UAAV,EAAuBL,IAAD,IAAU;MAC9BA,IAAI,CAAC,CAAD,CAAJ,CAAQQ,MAAR,GAAiB,QAAjB;MAEAb,cAAc,CAACK,IAAD,CAAd;IACD,CAJD,EAJc,CAQV;;IACJ,OAAO,MAAM;MACXb,MAAM,CAACsB,UAAP;IACD,CAFD;EAGD,CAZQ,EAYN,CAACtB,MAAD,CAZM,CAAT;EAcA,oBACE,QAAC,cAAD,CAAgB,QAAhB;IAAyB,KAAK,EAAE;MAAEO,WAAF;MAAeC;IAAf,CAAhC;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArDM;;GAAMD,e;;KAAAA,e;AAuDb,OAAO,MAAMkB,iBAAiB,GAAG,MAAM;EAAA;;EACrC,OAAO7B,UAAU,CAACG,cAAD,CAAjB;AACD,CAFM;;IAAM0B,iB"},"metadata":{},"sourceType":"module"}