{"ast":null,"code":"var _jsxFileName = \"E:\\\\new Dashboard\\\\dashboard\\\\src\\\\components\\\\machinelist\\\\index.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport { MachineGrid } from \"./utils/machinegrid\";\nimport TimeGrid from \"./utils/timegrid\";\nimport { Title } from \"./utils/title\";\nimport { useMachineContext } from \"../../contexts/machinecontext\"; // ... (imports remain unchanged)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MachineList = () => {\n  _s();\n\n  const {\n    machineData\n  } = useMachineContext();\n  console.log(machineData, \" machineData\");\n  if (machineData != null) return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"Molding Section Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: machineData.map((machine, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        sm: 4,\n        md: 2,\n        lg: 2,\n        m: {\n          sm: 2,\n          md: 4,\n          lg: 0\n        },\n        sx: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: index === 0 && machine.machineID === 0 ? /*#__PURE__*/_jsxDEV(TimeGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `machines/:${machine.machineID}`\n          },\n          state: { ...machine\n          },\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MachineGrid, {\n            ID: machine.machineID,\n            monaNumber: machine.monaNumber,\n            moldProtector: machine.moldProtector,\n            status: machine.status,\n            moldMaker: machine.moldMaker,\n            moldMaterial: machine.moldMaterial,\n            moldShots: Math.round(machine.moldShots),\n            failedShots: Math.round(machine.failedShots)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 15\n  }, this);\n};\n\n_s(MachineList, \"HZ8pcZ/efcaBBcbexPnL9EQOim0=\", false, function () {\n  return [useMachineContext];\n});\n\n_c = MachineList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachineList\");","map":{"version":3,"names":["React","Container","Grid","Link","MachineGrid","TimeGrid","Title","useMachineContext","MachineList","machineData","console","log","display","alignItems","justifyContent","map","machine","index","sm","md","lg","machineID","pathname","textDecoration","monaNumber","moldProtector","status","moldMaker","moldMaterial","Math","round","moldShots","failedShots"],"sources":["E:/new Dashboard/dashboard/src/components/machinelist/index.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport { MachineGrid } from \"./utils/machinegrid\";\nimport TimeGrid from \"./utils/timegrid\";\nimport { Title } from \"./utils/title\";\n\nimport { useMachineContext } from \"../../contexts/machinecontext\";\n\n// ... (imports remain unchanged)\n\nexport const MachineList = () => {\n  const { machineData } = useMachineContext();\n  console.log(machineData, \" machineData\");\n\n  if (machineData != null)\n    return (\n      <Container maxWidth={false}>\n        <Title title=\"Molding Section Statistics\" />\n\n        <Grid\n          container\n          spacing={4}\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {machineData.map((machine, index) => (\n            <Grid\n              item\n              xs={11}\n              sm={4}\n              md={2}\n              lg={2}\n              m={{ sm: 2, md: 4, lg: 0 }}\n              key={index}\n              sx={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {index === 0 && machine.machineID === 0 ? (\n                <TimeGrid />\n              ) : (\n                <Link\n                  to={{ pathname: `machines/:${machine.machineID}` }}\n                  state={{ ...machine }}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <MachineGrid\n                    ID={machine.machineID}\n                    monaNumber={machine.monaNumber}\n                    moldProtector={machine.moldProtector}\n                    status={machine.status}\n                    moldMaker={machine.moldMaker}\n                    moldMaterial={machine.moldMaterial}\n                    moldShots={Math.round(machine.moldShots)}\n                    failedShots={Math.round(machine.failedShots)}\n                  />\n                </Link>\n              )}\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    );\n  else return <div>error</div>;\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC,C,CAEA;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAC/B,MAAM;IAAEC;EAAF,IAAkBF,iBAAiB,EAAzC;EACAG,OAAO,CAACC,GAAR,CAAYF,WAAZ,EAAyB,cAAzB;EAEA,IAAIA,WAAW,IAAI,IAAnB,EACE,oBACE,QAAC,SAAD;IAAW,QAAQ,EAAE,KAArB;IAAA,wBACE,QAAC,KAAD;MAAO,KAAK,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,IAAD;MACE,SAAS,MADX;MAEE,OAAO,EAAE,CAFX;MAGE,EAAE,EAAE;QACFG,OAAO,EAAE,MADP;QAEFC,UAAU,EAAE,QAFV;QAGFC,cAAc,EAAE;MAHd,CAHN;MAAA,UASGL,WAAW,CAACM,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,kBACf,QAAC,IAAD;QACE,IAAI,MADN;QAEE,EAAE,EAAE,EAFN;QAGE,EAAE,EAAE,CAHN;QAIE,EAAE,EAAE,CAJN;QAKE,EAAE,EAAE,CALN;QAME,CAAC,EAAE;UAAEC,EAAE,EAAE,CAAN;UAASC,EAAE,EAAE,CAAb;UAAgBC,EAAE,EAAE;QAApB,CANL;QAQE,EAAE,EAAE;UACFP,UAAU,EAAE,QADV;UAEFC,cAAc,EAAE;QAFd,CARN;QAAA,UAaGG,KAAK,KAAK,CAAV,IAAeD,OAAO,CAACK,SAAR,KAAsB,CAArC,gBACC,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QADD,gBAGC,QAAC,IAAD;UACE,EAAE,EAAE;YAAEC,QAAQ,EAAG,aAAYN,OAAO,CAACK,SAAU;UAA3C,CADN;UAEE,KAAK,EAAE,EAAE,GAAGL;UAAL,CAFT;UAGE,KAAK,EAAE;YAAEO,cAAc,EAAE;UAAlB,CAHT;UAAA,uBAKE,QAAC,WAAD;YACE,EAAE,EAAEP,OAAO,CAACK,SADd;YAEE,UAAU,EAAEL,OAAO,CAACQ,UAFtB;YAGE,aAAa,EAAER,OAAO,CAACS,aAHzB;YAIE,MAAM,EAAET,OAAO,CAACU,MAJlB;YAKE,SAAS,EAAEV,OAAO,CAACW,SALrB;YAME,YAAY,EAAEX,OAAO,CAACY,YANxB;YAOE,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWd,OAAO,CAACe,SAAnB,CAPb;YAQE,WAAW,EAAEF,IAAI,CAACC,KAAL,CAAWd,OAAO,CAACgB,WAAnB;UARf;YAAA;YAAA;YAAA;UAAA;QALF;UAAA;UAAA;UAAA;QAAA;MAhBJ,GAOOf,KAPP;QAAA;QAAA;QAAA;MAAA,QADD;IATH;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CADF,KAqDK,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACN,CA1DM;;GAAMT,W;UACaD,iB;;;KADbC,W"},"metadata":{},"sourceType":"module"}