{"ast":null,"code":"var _jsxFileName = \"/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-undef */\n// import { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Box, Container, Grid, Card, Typography } from \"@mui/material\";\nimport { DashboardLayout } from \"./Dashboard/dashboard-layout\";\nimport { MachineList } from \"./machinelist/MachineList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { MachineInfoPage } from \"./machinelist/MachineInfo/MachineinfoPage.js\";\nimport { Route, Routes } from \"react-router-dom\";\nimport NotFound from \"../404.js\"; // const { io } = require(\"socket.io-client\");\n// const socket = io(process.env.REACT_APP_SERVER_BASE_URL, {\n//   transports: [\"websocket\"],\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar machineDumbData = [];\nvar moldMake = [\"ALEX\", \"TET\", \"TONY\", \"MONA\"];\nvar moldMat = [\"HIPS\", \"ABS\", \"ABS-CLEAR\", \"SAN\"];\n\nfor (let index = 0; index < 24; index++) {\n  machineDumbData.push({\n    machineID: index.toString(),\n    monaNumber: \"#132\" + index.toString(),\n    moldID: \"QXO43\" + index.toString(),\n    moldShots: 12 + index,\n    failedShots: 2 + index % 5,\n    prodRate: 12 + index,\n    material: moldMat[index % 4],\n    moldMaker: moldMake[index % 4]\n  });\n}\n\nexport default function Dashboard(props) {\n  _s();\n\n  const [machineData, setMachineData] = useState([]); // useEffect(() => {\n  //   document.title = \"Dashboard\";\n  // }, [props.title]);\n  // useEffect(() => {\n  //   socket.on(\"connect_error\", (err) => {\n  //     console.log(`connect_error due to ${err.message}`);\n  //   });\n  //   socket.on(\"machines\", (data) => {\n  //     data[0].status = \"Online\";\n  //     console.log(data);\n  //     setMachineData(data);\n  //   });\n  // });\n  // i don't want these mesy structre\n\n  return (\n    /*#__PURE__*/\n    // <DashboardLayout title={\"\"} machineData={machineDumbData}>\n    _jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MachineList, {\n          machineData: machineDumbData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this) // </DashboardLayout>\n\n  );\n}\n\n_s(Dashboard, \"NOrxjxoK36KoihgrZRwpgouUJfg=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Link","Box","Container","Grid","Card","Typography","DashboardLayout","MachineList","React","useState","useEffect","MachineInfoPage","Route","Routes","NotFound","machineDumbData","moldMake","moldMat","index","push","machineID","toString","monaNumber","moldID","moldShots","failedShots","prodRate","material","moldMaker","Dashboard","props","machineData","setMachineData"],"sources":["/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/src/components/Dashboard.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n// import { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Box, Container, Grid, Card, Typography } from \"@mui/material\";\nimport { DashboardLayout } from \"./Dashboard/dashboard-layout\";\nimport { MachineList } from \"./machinelist/MachineList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { MachineInfoPage } from \"./machinelist/MachineInfo/MachineinfoPage.js\";\nimport { Route, Routes } from \"react-router-dom\";\nimport NotFound from \"../404.js\";\n\n// const { io } = require(\"socket.io-client\");\n// const socket = io(process.env.REACT_APP_SERVER_BASE_URL, {\n//   transports: [\"websocket\"],\n// });\n\nvar machineDumbData = [];\nvar moldMake = [\"ALEX\", \"TET\", \"TONY\", \"MONA\"];\nvar moldMat = [\"HIPS\", \"ABS\", \"ABS-CLEAR\", \"SAN\"];\nfor (let index = 0; index < 24; index++) {\n  machineDumbData.push({\n    machineID: index.toString(),\n    monaNumber: \"#132\" + index.toString(),\n    moldID: \"QXO43\" + index.toString(),\n    moldShots: 12 + index,\n    failedShots: 2 + (index % 5),\n    prodRate: 12 + index,\n    material: moldMat[index % 4],\n    moldMaker: moldMake[index % 4],\n  });\n}\n\nexport default function Dashboard(props) {\n  const [machineData, setMachineData] = useState([]);\n\n  // useEffect(() => {\n  //   document.title = \"Dashboard\";\n  // }, [props.title]);\n\n  // useEffect(() => {\n  //   socket.on(\"connect_error\", (err) => {\n  //     console.log(`connect_error due to ${err.message}`);\n  //   });\n\n  //   socket.on(\"machines\", (data) => {\n  //     data[0].status = \"Online\";\n  //     console.log(data);\n  //     setMachineData(data);\n  //   });\n  // });\n  // i don't want these mesy structre\n\n  return (\n    // <DashboardLayout title={\"\"} machineData={machineDumbData}>\n    <Routes>\n      <Route\n        exact\n        path=\"/\"\n        element={<MachineList machineData={machineDumbData} />}\n      />\n      {/* <Route\n        path=\"/machines/:ID\"\n        element={<MachineInfoPage machineData={machineDumbData} />}\n      /> */}\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    // </DashboardLayout>\n  );\n}\n"],"mappings":";;;AAAA;;AACA;AACA;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,8CAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AACA;;;AAEA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,QAAQ,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,MAAxB,CAAf;AACA,IAAIC,OAAO,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,WAAhB,EAA6B,KAA7B,CAAd;;AACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;EACvCH,eAAe,CAACI,IAAhB,CAAqB;IACnBC,SAAS,EAAEF,KAAK,CAACG,QAAN,EADQ;IAEnBC,UAAU,EAAE,SAASJ,KAAK,CAACG,QAAN,EAFF;IAGnBE,MAAM,EAAE,UAAUL,KAAK,CAACG,QAAN,EAHC;IAInBG,SAAS,EAAE,KAAKN,KAJG;IAKnBO,WAAW,EAAE,IAAKP,KAAK,GAAG,CALP;IAMnBQ,QAAQ,EAAE,KAAKR,KANI;IAOnBS,QAAQ,EAAEV,OAAO,CAACC,KAAK,GAAG,CAAT,CAPE;IAQnBU,SAAS,EAAEZ,QAAQ,CAACE,KAAK,GAAG,CAAT;EARA,CAArB;AAUD;;AAED,eAAe,SAASW,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACvC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C,CADuC,CAGvC;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACA,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QACE,KAAK,MADP;QAEE,IAAI,EAAC,GAFP;QAGE,OAAO,eAAE,QAAC,WAAD;UAAa,WAAW,EAAEM;QAA1B;UAAA;UAAA;UAAA;QAAA;MAHX;QAAA;QAAA;QAAA;MAAA,QADF,eAUE,QAAC,KAAD;QAAO,IAAI,EAAC,IAAZ;QAAiB,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAA1B;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,CAcE;;EAdF;AAgBD;;GApCuBc,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}