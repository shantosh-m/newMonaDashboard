{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94776\\\\Desktop\\\\monaDashboard\\\\dashboard\\\\src\\\\components\\\\progress\\\\utils\\\\progressgrid.js\",\n    _s = $RefreshSig$();\n\n// import { Grid } from \"@mui/material\";\n// export const  = () => {\n//   return <div className=\"working_machine\">hi</div>;\n// };\nimport React, { useState, useEffect } from \"react\";\nimport \"./progressgrid11.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip);\nexport const options = {\n  responsive: true,\n  scales: {\n    x: {\n      title: {\n        display: false\n      },\n      labels: [\"\", \"\", \"\", \"\", \"\"],\n      // Add empty strings as labels\n      grid: {\n        display: false // Hide x-axis grid lines\n\n      },\n      ticks: {\n        display: false,\n        maxTicksLimit: 5,\n        // Limit the number of ticks to the number of labels\n        fontsize: 0\n      }\n    },\n    y: {\n      title: {\n        display: false\n      },\n      grid: {\n        display: false // Hide x-axis grid lines\n\n      },\n      ticks: {\n        display: false,\n        // Hide x-axis ticks (values)\n        min: 0\n      }\n    }\n  }\n};\nconst MAX_POINTS = 5; // Maximum number of points to display\n\nconst initialData = {\n  labels: Array.from({\n    length: 5\n  }),\n  datasets: [{\n    data: [],\n    borderColor: \"rgb(53, 162, 235)\",\n    backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    fill: true\n  }]\n};\nexport const ProgressGrid = () => {\n  _s();\n\n  const [data, setData] = useState(initialData);\n  const [lastHourRate, setLastHourRate] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const last_hour_rate = Math.floor(Math.random() * (100 - 60 + 1)) + 60; // Example range: 100 to 60\n      // Update the data state with the new value\n\n      setData(prevData => {\n        const newData = [...prevData.datasets[0].data, last_hour_rate]; // Ensure the data points are limited to MAX_POINTS\n\n        const slicedData = newData.slice(-MAX_POINTS);\n        return { ...prevData,\n          datasets: [{ ...prevData.datasets[0],\n            data: slicedData\n          }]\n        };\n      }); // Update the lastHourRate state\n\n      setLastHourRate(last_hour_rate);\n    }, 2000); // Update every second\n\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, [lastHourRate]); // Removed lastHourRate from the dependency array\n\n  const [filled, setFilled] = useState(0);\n  const [isRunning] = useState(true); // Start the progress bar when the component mounts\n\n  const targetValue = Math.floor(Math.random() * (90 - 50 + 1)) + 30; // Generates a random number between 50 and 80\n\n  useEffect(() => {\n    if (filled < targetValue && isRunning) {\n      setTimeout(() => setFilled(prev => prev + 2), 50);\n    }\n  }, [filled, isRunning]);\n  const progressPercent = filled + \"%\";\n  const last_hour_rate = Math.floor(Math.random() * (100 - 60 + 1)) + 60; // Example range: 100 to 60\n\n  useEffect(() => {\n    setLastHourRate(last_hour_rate);\n  }, [last_hour_rate]);\n  const [target_shot] = useState(() => {\n    // Example range: 10000 to 30000\n    return Math.floor(Math.random() * (30000 - 10000 + 1)) + 10000;\n  });\n  const finished_shot = Math.round(filled / 100 * target_shot);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"working_machine1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab_full_background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"MoldID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./headerfill-vector.svg\",\n          alt: \"Header SVG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab_bodyprogress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph_last_hour\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph_margin\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              options: options,\n              data: data,\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                style: {\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"last_hour_box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"last_hour_rate\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: last_hour_rate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tooltip\",\n                children: \"HOURLY RATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progressbar_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"target\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [finished_shot, \" \", \">>\", \" \", target_shot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progressbar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\",\n                width: progressPercent,\n                backgroundColor: \"#3E8BFF\",\n                transition: \"width 0.5s\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProgressGrid, \"387V9kMP61pzwjSvurOmCROESlw=\");\n\n_c = ProgressGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressGrid\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Line","register","options","responsive","scales","x","title","display","labels","grid","ticks","maxTicksLimit","fontsize","y","min","MAX_POINTS","initialData","Array","from","length","datasets","data","borderColor","backgroundColor","fill","ProgressGrid","setData","lastHourRate","setLastHourRate","interval","setInterval","last_hour_rate","Math","floor","random","prevData","newData","slicedData","slice","clearInterval","filled","setFilled","isRunning","targetValue","setTimeout","prev","progressPercent","target_shot","finished_shot","round","height","width","transition"],"sources":["C:/Users/94776/Desktop/monaDashboard/dashboard/src/components/progress/utils/progressgrid.js"],"sourcesContent":["// import { Grid } from \"@mui/material\";\n\n// export const  = () => {\n//   return <div className=\"working_machine\">hi</div>;\n// };\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./progressgrid11.css\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip\n);\n\nexport const options = {\n  responsive: true,\n\n  scales: {\n    x: {\n      title: {\n        display: false,\n      },\n      labels: [\"\", \"\", \"\", \"\", \"\"], // Add empty strings as labels\n      grid: {\n        display: false, // Hide x-axis grid lines\n      },\n      ticks: {\n        display: false,\n        maxTicksLimit: 5, // Limit the number of ticks to the number of labels\n        fontsize: 0,\n      },\n    },\n    y: {\n      title: {\n        display: false,\n      },\n      grid: {\n        display: false, // Hide x-axis grid lines\n      },\n      ticks: {\n        display: false, // Hide x-axis ticks (values)\n        min: 0,\n      },\n    },\n  },\n};\n\nconst MAX_POINTS = 5; // Maximum number of points to display\n\nconst initialData = {\n  labels: Array.from({ length: 5 }),\n  datasets: [\n    {\n      data: [],\n      borderColor: \"rgb(53, 162, 235)\",\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n      fill: true,\n    },\n  ],\n};\n\nexport const ProgressGrid = () => {\n  const [data, setData] = useState(initialData);\n  const [lastHourRate, setLastHourRate] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const last_hour_rate = Math.floor(Math.random() * (100 - 60 + 1)) + 60; // Example range: 100 to 60\n\n      // Update the data state with the new value\n      setData((prevData) => {\n        const newData = [...prevData.datasets[0].data, last_hour_rate];\n\n        // Ensure the data points are limited to MAX_POINTS\n        const slicedData = newData.slice(-MAX_POINTS);\n\n        return {\n          ...prevData,\n          datasets: [\n            {\n              ...prevData.datasets[0],\n              data: slicedData,\n            },\n          ],\n        };\n      });\n\n      // Update the lastHourRate state\n      setLastHourRate(last_hour_rate);\n    }, 2000); // Update every second\n\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, [lastHourRate]); // Removed lastHourRate from the dependency array\n\n  const [filled, setFilled] = useState(0);\n  const [isRunning] = useState(true); // Start the progress bar when the component mounts\n\n  const targetValue = Math.floor(Math.random() * (90 - 50 + 1)) + 30; // Generates a random number between 50 and 80\n\n  useEffect(() => {\n    if (filled < targetValue && isRunning) {\n      setTimeout(() => setFilled((prev) => prev + 2), 50);\n    }\n  }, [filled, isRunning]);\n\n  const progressPercent = filled + \"%\";\n\n  const last_hour_rate = Math.floor(Math.random() * (100 - 60 + 1)) + 60; // Example range: 100 to 60\n  useEffect(() => {\n    setLastHourRate(last_hour_rate);\n  }, [last_hour_rate]);\n\n  const [target_shot] = useState(() => {\n    // Example range: 10000 to 30000\n    return Math.floor(Math.random() * (30000 - 10000 + 1)) + 10000;\n  });\n  const finished_shot = Math.round((filled / 100) * target_shot);\n\n  return (\n    <div className=\"working_machine1\">\n      <div className=\"tab_full_background\">\n        <div className=\"header-box\">\n          <span>MoldID</span>\n          <img src=\"./headerfill-vector.svg\" alt=\"Header SVG\" />\n        </div>\n        <div className=\"tab_bodyprogress\">\n          <div className=\"graph_last_hour\">\n            <div className=\"graph_margin\">\n              <Line options={options} data={data}>\n                <canvas style={{ height: \"100%\" }}></canvas>\n              </Line>\n            </div>\n            <div className=\"last_hour_box\">\n              <div className=\"last_hour_rate\">\n                <span>{last_hour_rate}</span>\n                <div className=\"tooltip\">HOURLY RATE</div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"progressbar_margin\">\n            <div className=\"target\">\n              <span>\n                {finished_shot} {\">>\"} {target_shot}\n              </span>\n            </div>\n            <div className=\"progressbar\">\n              <div\n                style={{\n                  height: \"100%\",\n                  width: progressPercent,\n                  backgroundColor: \"#3E8BFF\",\n                  transition: \"width 0.5s\",\n                }}\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}