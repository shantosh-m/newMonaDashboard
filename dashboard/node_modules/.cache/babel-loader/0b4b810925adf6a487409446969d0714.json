{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n      _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = _ref => {\n  let {\n    width\n  } = _ref;\n\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    position,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const getCell = React.useCallback((column, cellProps) => {\n    var _rootProps$components;\n\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  let minHeight = rowHeight;\n\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, _ref2) => {\n      let [key, size] = _ref2;\n      const isBaseHeight = /^base[A-Z]/.test(key);\n\n      if (!isBaseHeight) {\n        return acc;\n      }\n\n      numberOfBaseSizes += 1;\n\n      if (size > acc) {\n        return size;\n      }\n\n      return acc;\n    }, 0);\n\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight\n  });\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    let propertyValue = style[property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n\n    propertyValue += sizes.spacingBottom;\n    style[property] = propertyValue;\n  }\n\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","clsx","unstable_composeClasses","composeClasses","useForkRef","GridEditModes","GridRowModes","GridCellModes","useGridApiContext","getDataGridUtilityClass","gridClasses","useGridRootProps","gridColumnsTotalWidthSelector","useGridSelector","useGridVisibleRows","findParentElementFromClassName","GRID_CHECKBOX_SELECTION_COL_DEF","GRID_ACTIONS_COLUMN_TYPE","GRID_DETAIL_PANEL_TOGGLE_FIELD","gridSortModelSelector","gridRowTreeDepthSelector","gridDensityHeaderGroupingMaxDepthSelector","randomNumberBetween","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","editable","editing","selected","isLastVisible","rowHeight","classes","slots","root","EmptyCell","width","style","className","GridRow","forwardRef","props","refProp","_apiRef$current$getRo","rowId","row","index","styleProp","position","visibleColumns","renderedColumns","containerWidth","firstColumnToRender","cellFocus","cellTabIndex","editRowsState","onClick","onDoubleClick","onMouseEnter","onMouseLeave","other","apiRef","ref","useRef","rootProps","currentPage","columnsTotalWidth","sortModel","treeDepth","headerGroupingMaxDepth","handleRef","ariaRowIndex","hasScrollX","hasScrollY","current","getRootDimensions","getRowMode","Edit","editMode","Row","useLayoutEffect","ResizeObserver","unstable_storeRowHeightMeasurement","clientHeight","range","rowIndex","getRowIndexRelativeToVisibleRows","unstable_setLastMeasuredRowIndex","rootElement","hasFixedHeight","undefined","resizeObserver","entries","entry","height","borderBoxSize","length","blockSize","contentRect","observe","disconnect","publish","useCallback","eventName","propHandler","event","target","nodeType","currentTarget","contains","getRow","publishEvent","getRowParams","publishClick","cell","field","getAttribute","getCellMode","column","getColumn","type","getCell","cellProps","_rootProps$components","cellParams","getCellParams","classNames","disableDragEvents","disableColumnReorder","disableReorder","rowReordering","Object","keys","cellClassName","push","editCellState","content","renderCell","_rootProps$classes","api","renderEditCell","_rootProps$classes2","updatedRow","unstable_getRowWithUpdatedValues","editCellStateRest","params","getCellClassName","hasFocus","id","tabIndex","cellMode","components","Cell","value","showRightBorder","formattedValue","align","colIndex","indexRelativeToAllColumns","isEditable","colSpan","componentsProps","children","sizes","unstable_getRowInternalSizes","minHeight","numberOfBaseSizes","maximumSize","reduce","acc","key","size","isBaseHeight","test","maxHeight","spacingTop","property","rowSpacingType","spacingBottom","propertyValue","parseInt","rowClassNames","unstable_applyPipeProcessors","getRowClassName","_currentPage$range","indexRelativeToCurrentPage","firstRowIndex","rowParams","isFirstVisible","rows","randomNumber","cells","i","isLastColumn","removeLastBorderRight","showCellRightBorder","disableExtendRowFullWidth","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","contentWidth","Math","round","SkeletonCell","emptyCellWidth","eventHandlers","role","process","env","NODE_ENV","propTypes","object","number","isRequired","bool","lastColumnToRender","oneOf","arrayOf","oneOfType","string"],"sources":["/home_2/university/mona/e17-co328-Analysis-Tool-for-Industrial-Images/web-app/node_modules/@mui/x-data-grid/components/GridRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n      _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    position,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const getCell = React.useCallback((column, cellProps) => {\n    var _rootProps$components;\n\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  let minHeight = rowHeight;\n\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n\n      if (!isBaseHeight) {\n        return acc;\n      }\n\n      numberOfBaseSizes += 1;\n\n      if (size > acc) {\n        return size;\n      }\n\n      return acc;\n    }, 0);\n\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight\n  });\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    let propertyValue = style[property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n\n    propertyValue += sizes.spacingBottom;\n    style[property] = propertyValue;\n  }\n\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };"],"mappings":"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"},"metadata":{},"sourceType":"module"}